Aws Kubernetes for windows

Install kubectl steps on windows
Install eksctl
Install aws cli
Create aws access key
Login with access key on aws cli


Install kubectl steps on windows

Using curl:
If you have curl installed, use this command:
curl.exe -LO "https://dl.k8s.io/release/v1.33.3/bin/windows/amd64/kubectl.exe"


Note:
To find out the latest stable version (for example, for scripting), take a look at https://dl.k8s.io/release/stable.txt.
Validate the binary (optional)
Download the kubectl checksum file:
curl.exe -LO "https://dl.k8s.io/v1.33.0/bin/windows/amd64/kubectl.exe.sha256"


Validate the kubectl binary against the checksum file:
Using Command Prompt to manually compare CertUtil's output to the checksum file downloaded:
CertUtil -hashfile kubectl.exe SHA256


type kubectl.exe.sha256


Using PowerShell to automate the verification using the -eq operator to get a True or False result:
$(Get-FileHash -Algorithm SHA256 .\kubectl.exe).Hash -eq $(Get-Content .\kubectl.exe.sha256)


Append or prepend the kubectl binary folder to your PATH environment variable.
Test to ensure the version of kubectl is the same as downloaded:
kubectl version --client


Install eksctl steps on windows
Manual Download (Intel/AMD 64-bit)
Download the binary
 Visit:
 https://github.com/eksctl-io/eksctl/releases/latest

 Download the file:
 eksctl_Windows_amd64.zip (This is for Intel/AMD 64-bit processors).


Extract it


Unzip the file (you’ll get eksctl.exe).


Move to a permanent location


Example: C:\eksctl\eksctl.exe


Add to PATH


Search "Edit the system environment variables"


Click Environment Variables


Under System variables, find Path, click Edit, New, and add:

 makefile
CopyEdit
C:\eksctl

Click OK to save.


5. Verify installation
 Open a new PowerShell and run:

 powershell
CopyEdit
eksctl version


✅ Security Tip (ties to your earlier checksum/signature question):
 When you download eksctl, also download the .sha256 checksum file from the same release page.
Optionally, verify the checksum:
Download the checksum file: latest

 Run in PowerShell:
powershell
CopyEdit
Get-FileHash eksctl.exe -Algorithm SHA256

Compare the hash with the official one to ensure it’s not tampered with.



eksctl create fargateprofile --cluster demo-cluster --region us-east-1 --name alb-sample-app --namespace game-2048


kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/examples/2048/2048_full.yaml


eksctl utils associate-iam-oidc-provider --cluster demo-cluster --approve


aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json


eksctl create iamserviceaccount --cluster=demo-cluster --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::581018137762:policy/AWSLoadBalancerControllerIAMPolicy --approve



helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=demo-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller --set region=us-east-1 --set vpcId=vpc-09146e3bda04ec0f8


kubectl get pods -n kube-system
  2: kubectl get deploy -n kube-system
  3: kubectl get pods -n kube-system
  4: kubectl get ingress -n game-2048
  
  
In powershell
  
 eksctl version
choco install eksctl
eksctl version
Get-FileHash eksctl.exe -Algorithm SHA256
eksctl version
cd ..
Get-FileHash eksctl.exe -Algorithm SHA256
cd .\eksctl\
Get-FileHash eksctl.exe -Algorithm SHA256
eksctl version
eksctl
aws version
kubectl get svc -n game-2048
choco install kubernetes-helm
helm version
helm repo add eks https://aws.github.io/eks-charts
helm repo update eks
helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=demo-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller --set region=us-east-1 --set vpcId=vpc-09146e3bda04ec0f8
kubectl get pods -n kube-ststem -w
Get-History
